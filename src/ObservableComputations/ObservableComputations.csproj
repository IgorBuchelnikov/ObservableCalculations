<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net461;netcoreapp2.0;netstandard2.0</TargetFrameworks>
    <SignAssembly>true</SignAssembly>
    <Platforms>AnyCPU;x86</Platforms>
    <LangVersion>7.3</LangVersion>
    <DelaySign>false</DelaySign>
    <AssemblyOriginatorKeyFile>assembly_strong_name_key.snk</AssemblyOriginatorKeyFile>
    <Authors>Igor Buchelnikov  (igor_buchelnikov_github@mail.ru)</Authors>
    <Company>Igor Buchelnikov  (igor_buchelnikov_github@mail.ru)</Company>
    <Description>Cross-platform .NET library for computations whose arguments and results are objects that implement INotifyPropertyChanged and INotifyCollectionChanged (ObservableCollection) interfaces. The computations include ones similar to LINQ, the computation of arbitrary expression and additional features. The computations are implemented as extension methods, like LINQ ones. You can combine calls of ObservableComputations extension methods including chaining and nesting, as you do for LINQ methods. Computations in background threads, including parallel ones, as well as time-related processing of CollectionChanged and PropertyChanged events, are supported. ObservableComputations is easy to use and powerful implementation of reactive programming paradigm. With ObservableComputations, your code will fit more to the functional style than with standard LINQ.</Description>
    <PackageLicenseUrl>https://github.com/IgorBuchelnikov/ObservableComputations/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/IgorBuchelnikov/ObservableComputations</PackageProjectUrl>
    <RepositoryUrl>https://github.com/IgorBuchelnikov/ObservableComputations.git</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>react reactive dynamic INotifyPropertyChanged INotifyCollectionChanged ObservableCollection observable computation observer data view binding bindable bind binding continuous live fresh linq declarative functional programming paradigm</PackageTags>
    <NeutralLanguage>en</NeutralLanguage>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>New features:
— API for control over INotifyPropertyChanged, INotifyCollectionChanged, INotifyMethodChanged events subscription (weak event subscriptions were removed).
— Computations in background threads, including parallel ones (CollectionDispatching, ScalarDispatching, PropertyDispatching operators).
— Improved processing of overlapping changes (they are deferred instead of exception throwing).
— Paging, CollectionDisposing, ScalarDisposing operators.

Many minor API changes and bug fixes.

</PackageReleaseNotes>
    <Version>2.0.0</Version>
    <AssemblyName>ObservableComputations</AssemblyName>
    <PackageId>ObservableComputations</PackageId>
    <Product>ObservableComputations</Product>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <FileVersion>2.0.0.0</FileVersion>
    <PackageIconUrl>https://raw.githubusercontent.com/IgorBuchelnikov/ObservableComputations/master/icon_32x32.ico</PackageIconUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net472|x86'">
    <WarningLevel>0</WarningLevel>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <OutputPath>bin\Debug\</OutputPath>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net461|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net461|x86'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net461|AnyCPU'">
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>  
  
  <ItemGroup>
    <None Update="ExtensionMethods.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ExtensionMethods.generated.cs</LastGenOutput>
    </None>
    <None Update="ExtensionMethods.ttinclude">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ExtensionMethods.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>  
  
  <ItemGroup>
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>  
  
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>  
  
  <ItemGroup>
    <Compile Update="ExtensionMethods.generated.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ExtensionMethods.tt</DependentUpon>
    </Compile>
  </ItemGroup>   
</Project>